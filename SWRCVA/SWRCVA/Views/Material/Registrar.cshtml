@model SWRCVA.Models.Material

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Registrar";
}

<h2>Registrar</h2>



    @using (Html.BeginForm())
            {
        @Html.AntiForgeryToken()

            <h4>Materiales</h4>
            <hr />
              
                    <div id="FormRegistrarMat" class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2", })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @required = "required", title = "El campo Nombre es necesario" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCatMat, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.IdCatMat, (IEnumerable<SelectListItem>)ViewBag.CatMaterial, "Selecione", new { @class = "form-control", Type="number", onchange = "CambiarCat();", id = "DropDownCat", @required = "required", title = "El campo Categoria es necesario" })
                                @Html.ValidationMessageFor(model => model.IdCatMat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="ColorMaterial">
                            @Html.Label("Color", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <table>
                                    <tr>
                                        <td>
                                            <select id="ColorMatselect" class="form-control" name="SubCat" disabled="disabled"></select>
                                        </td>
                                        <td>   ₡</td>
                                        <td>
                                            @Html.TextBox("Costo_Material", "", new { @class = "form-control", id = "txtCostoMat", placeholder = "Costo",type="number", style = "width:100px", disabled="disabled" })
                                        </td>
                                        <td>&nbsp;&nbsp;<input type="button" id="btnAgregarColor" class="btn-success btn-xs" disabled="disabled" value="+" /></td>
                                    </tr>
                                    @Html.ValidationMessageFor(model => model.ColorMaterial, "", new { @class = "text-danger" })
                                </table>
                                <table  class="table-hover" id="ListaColor">

                                </table>
                            </div>
                        </div>
                        <div id="subCat" class="form-group">
                            @Html.LabelFor(model => model.IdSubCatMat, "Sub Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.IdSubCatMat, (new SelectList(
                  new List<Object>{
                  })), new { @class = "form-control",id="dropSubCat", @required = "required", title = "El campo Sub Categoria es necesario", disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.IdSubCatMat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdProveedor, "Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.IdProveedor, (IEnumerable<SelectListItem>)ViewBag.Proveedor, "Selecione", new { @class = "form-control", @required = "required", title = "El campo Proveedor es necesario" })
                                @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Estado, (new SelectList(
                  new List<Object>{
                      new { value = "" , text = "Seleccione"  },
                       new { value = 1 , text = "Activo"  },
                       new { value = 0 , text = "Inactivo" }
                    },
                  "value",
                  "text",
                   2)), new { @class = "form-control", @required = "required", title = "El campo Estado es necesario" })
                                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="CostoMatterial" class="form-group">
                            @Html.LabelFor(model => model.Costo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control", @required = "required", id = "txtCosto", title = "El campo Costo es necesario" } })
                                @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Registrar" class="btn btn-primary edit" />
                            </div>
                        </div>
                    </div>
    }
<div>
    <button onclick="location.href='@Url.Action("Index")',RefrescarLista()" class="btn btn-info">Regresar a la Lista</button>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/FuncionesMaterial")   
}

