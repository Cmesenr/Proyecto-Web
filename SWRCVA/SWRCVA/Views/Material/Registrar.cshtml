@model SWRCVA.Models.Material

    @{
    ViewBag.Title = "Registro Material";
}


<h2>Registro Material</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Material</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCatMat, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdCatMat, (IEnumerable<SelectListItem>)ViewBag.CatMaterial, "Selecione", new { @class = "form-control", id="DropDownCat"})
                @Html.ValidationMessageFor(model => model.IdCatMat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ColorMaterial" >
            @Html.Label("Color", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    <tr>
                        <td>
                            @Html.DropDownList("IdColor", (IEnumerable<SelectListItem>)ViewBag.ColorMaterial, "Selecione", new { @class = "form-control", id = "DropDownColor" })
                        </td>
                        <td>   ₡</td>
                        <td>
                            @Html.TextBox("Costo_Material", "", new { @class = "form-control", id = "txtCostoMat", placeholder="Costo", style="width:100px"})
                        </td>
                        <td>&nbsp;&nbsp;<input type="button" id="btnAgregarColor" class="btn-xs" value="+" /></td>
                    </tr>
                    @Html.ValidationMessageFor(model => model.ColorMaterial, "", new { @class = "text-danger" })
                </table>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdSubCatMat, "Sub Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdSubCatMat, (IEnumerable<SelectListItem>)ViewBag.SubCatMaterial, "Selecione", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdSubCatMat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdProveedor, "Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdProveedor, (IEnumerable<SelectListItem>)ViewBag.Proveedor , "Selecione", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Estado, (new SelectList(
                  new List<Object>{
                      new { value = "" , text = "Seleccione"  },
                       new { value = 1 , text = "Activo"  },
                       new { value = 0 , text = "Inactivo" }
                    },
                  "value",
                  "text",
                   2)),new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Costo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la Lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
