@model SWRCVA.Models.Producto

@{
    ViewBag.Title = "Productos";
}

<h2>Productos</h2>

@using (Html.BeginForm("Editar", "Producto", FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div id="FormProductos" class="form-horizontal">
        <h4>Editar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProducto)
        <div class="row">
            <div class="col-md-6" id="formProductotipo">
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdTipoProducto, "Tipo de Producto", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IdTipoProducto, null, "Seleccione", htmlAttributes: new { @class = "form-control", id = "DropDownTipoProducto" })
                        @Html.ValidationMessageFor(model => model.IdTipoProducto, "", new { @class = "text-danger" })
                    </div>
                </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Forma, "Atributos", htmlAttributes: new { @class = "control-label col-md-2", @hidden = "hidden", id = "lblAtributos" })
                <div id="Group_Ventana" class="col-md-10" hidden="hidden">

                    @Html.RadioButtonFor(model => model.Forma, "F") &nbsp;<span class="text-muted">Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "CE") &nbsp;<span class="text-muted">Celocia</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "CU") &nbsp;<span class="text-muted">Curva</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "F-C") &nbsp;<span class="text-muted">Fijo-Celocia</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "C-F") &nbsp;<span class="text-muted">Celocia-Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "C-o-F") &nbsp;<span class="text-muted">Celocia sobre Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "F-C-F") &nbsp;<span class="text-muted">Fijo-Celocia-Fijo</span>
                    @Html.ValidationMessageFor(model => model.Forma, "", new { @class = "text-danger" })
                </div>
                <div id="Group_Ventana5020" class="col-md-10" hidden="hidden">
                    @Html.RadioButtonFor(model => model.Forma, "F-M") &nbsp;<span class="text-muted">Fijo-Movil</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "M-M") &nbsp;<span class="text-muted">Movil-Movil</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "F-M-F") &nbsp;<span class="text-muted">Fijo-Movil-Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "M-F-M") &nbsp;<span class="text-muted">Movil-Fijo-Movil</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "F-M-M-F") &nbsp;<span class="text-muted">Fijo-Movil-Movil-Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "M-F-F-M") &nbsp;<span class="text-muted">Movil-Fijo-Fijo-Movil</span>
                    @Html.ValidationMessageFor(model => model.Forma, "", new { @class = "text-danger" })
                </div>
                <div id="Group_Portones" class="col-md-10" hidden="hidden">
                    @Html.RadioButtonFor(model => model.Forma, "F-M") &nbsp;<span class="text-muted">Fijo-Movil</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "M-M") &nbsp;<span class="text-muted">Movil-Movil</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "F-M-F") &nbsp;<span class="text-muted">Fijo-Movil-Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "M-F-M") &nbsp;<span class="text-muted">Movil-Fijo-Movil</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "F-M-M-F") &nbsp;<span class="text-muted">Fijo-Movil-Movil-Fijo</span><br>
                    @Html.RadioButtonFor(model => model.Forma, "M-F-F-M") &nbsp;<span class="text-muted">Movil-Fijo-Fijo-Movil</span>
                    @Html.ValidationMessageFor(model => model.Forma, "", new { @class = "text-danger" })
                </div>
            </div>
        
                <div class="form-group" id="ProductMaterial">
                    @Html.Label("Materiales", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <table class="table-condensed">
                            <tr>
                                <td>
                                    @Html.DropDownList("IdCategoria", (IEnumerable<SelectListItem>)ViewBag.Categorias, "Selecione", new { @class = "form-control", id = "DropDownCategoria" })
                                </td>
                                <td>
                                    <select id="MaterialSelect" class="form-control" name="MaterialProducto" disabled="disabled"></select>

                                </td>
                                <td colspan="2">&nbsp;&nbsp;<input type="button" id="btnAgregarMaterial" class="btn-success btn-xs" value="+" disabled="disabled" /></td>
                            </tr>
                            <tr>
                                <td rowspan="2">

                                    <select id="SubCatSelect" class="form-control" name="SubCat" disabled="disabled"></select>
                                </td>


                            </tr>

                            @Html.ValidationMessageFor(model => model.ListaMatProducto, "", new { @class = "text-danger" })
                        </table>
                        <table class="table-hover" id="ListaMaterial"></table>
                    </div>
                </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                        <input id="ImageFile" type="file" name="ImageFile" class="form-control" />
                @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Estado, (new SelectList(
new List<Object>{
                      new { value = "" , text = "Seleccione"  },
                       new { value = 1 , text = "Activo"  },
                       new { value = 0 , text = "Inactivo" }
                    },
"value",
"text",
2)), new { @class = "form-control", @required = "required", title = "El campo Estado es necesario" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-primary edit" />
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    <div class="text-info"><h4>Lista Materiales:</h4></div>
                    <div class="col-md-10">
                        <table class="table-condensed" id="ListaMateriales">
                            @{var divisor = 2;
                                int i = 0;
                                string resultado = "";
                                foreach (var item in Model.ListaMatProducto.ToList())
                                {
                                    if (i == 0 || divisor == i)
                                    {
                                        resultado += "<tr>";

                                    }
                                    resultado += "<td><span class='label label-default'>" + item.Material.Nombre + "&nbsp;&nbsp;<input type='button' id='eliminarmat' data-id='" + item.IdMaterial + "'class='btn-danger btn-xs' value='X' /></span></td>";
                                    if (i == (divisor - 1))
                                    {
                                        resultado += "</tr>";
                                        divisor += 2;
                                    }

                                    i++;
                                }
                            }
                                @Html.Raw(resultado)

                        </table>
                    </div>
                </div>
                <div class="form-group">
                    <div class="text-info"><h4>Imagen:</h4></div>
                    <div class="col-md-10">
                        @if (Model.Imagen!= null)
                        {
                            <img id="MostrarImagen" class="img-thumbnail" src="data:image/png;base64,@Convert.ToBase64String(Model.Imagen)" alt="" />
                        }
                        else
                        {
                            <img id="MostrarImagen" class="img-thumbnail" src="" alt="" />
                        }
                        
                        <div id="ImageDiv" class="text-center"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <button onclick="location.href='@Url.Action("Index")',RefrescarLista()" class="btn btn-info">Regresar a la Lista</button>
</div>
<div class="modal fade" id="ModalError" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error</h4>
            </div>
            <div class="modal-body">
                <center><p id="TextModal"></p></center>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn">Ok</button>
            </div>
        </div>

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/FuncionesProducto")
    <script type="text/javascript">
        $(window).unload(function () {
            RefrescarLista();
        });
    </script>
}
