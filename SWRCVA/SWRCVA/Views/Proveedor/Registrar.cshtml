@model SWRCVA.Models.Proveedor

@{
    ViewBag.Title = "Registrar";
}

<h2>Proveedores</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="MatenimientoFondo">
        <div class="form-horizontal">
            <h4>Registrar</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", onkeypress = "return acceptonlyNum(event);", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Estado, (new SelectList(
                  new List<Object>{
                      new { value = "" , text = "Seleccione"  },
                       new { value = 1 , text = "Activo"  },
                       new { value = 0 , text = "Inactivo" }
                    },
                  "value",
                  "text",
                   2)), new { @class = "form-control", @required = "required", title = "El campo Estado es necesario" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <button onclick="location.href='@Url.Action("Index")'" class="btn-circle btn-info btn-lg"><span class="glyphicon glyphicon-arrow-left"></span></button>
                </div>
                <div class="col-md-4 text-right">
                    <button type="submit" value="" class="btn-circleSave btn-primary btn-lg" title="Guardar"><span class="glyphicon glyphicon-floppy-open"></span></button>
                </div>
            </div>
        </div>
    </div>
}


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            @Scripts.Render("~/bundles/jqueryui")
            @Scripts.Render("~/bundles/FuncionesProveedor")

        }
